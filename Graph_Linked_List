#include<iostream>
using namespace std;
#define MAX 20


struct NODE
{
	char data;
	NODE* link;
};


NODE* init_NODE(char a)
{
	NODE* d = new NODE;
	d->data = a;
	d->link = NULL;
	return d;
}


void init_array(NODE* g[], int n)
{
	for (int i = 0; i < n; i++)
		g[i] = NULL;
}

void insert_NODE(NODE *&f, NODE * p)
{
	p->link = f;
	f = p;
}


void enter_graph(NODE * g[], int &n)
{
	cout << "Nhap so dinh trong do thi: ";
	cin >> n;
	init_array(g, n);
	system("cls");
	for (int i = 0; i < n; i++)
	{
		int a; char m;
		cout << "Nhap so luong dinh ke: ";
		cin >> a;
		for (int j = 0; j < a; j++)
		{
			cout << "Dinh ke thu " << j + 1 << ": ";
			cin >> m;
			NODE* p = init_NODE(m);
			insert_NODE(g[i], p);
		}
		system("cls");
	}
}


void output_list(NODE* f)
{
	for (NODE* k = f; k != NULL; k = k->link)
		cout << k->data << " ";
}

void output(NODE* g[], int n)
{
	cout << "Graph" << endl;
	for (int i = 0; i < n; i++)
	{
		cout << "Dinh thu " << i + 1 << ":";
		output_list(g[i]);
		cout << endl;
	}
}




void destroy_array(NODE* g[], int n)
{
	for (int i = 0; i < n; i++)
	{
		while (g[i] != NULL)
		{
			NODE* d = g[i];
			g[i] = g[i]->link;
			delete d;
		}
	}
}

int main()
{
	int n = 0;
	int choose;
	NODE* g[MAX];
	do
	{
		cout << "------------------MENU-------------------------" << endl;
		cout << "1. Enter Array                                  " << endl;
		cout << "2. Browse Array                                 " << endl;
		cout << "3. EXIT                                         " << endl;
		cout << "-----------------------------------------------" << endl;
		cout << "choose: ";
		while (true)
		{
			cin >> choose;
			if (choose > 0 && choose <= 3) break;
			else
				cout << "Nhap sai, nhap lai: ";
		}
		system("cls");
		switch (choose)
		{
		case 1:
		{
			enter_graph(g, n);
			break;
		}
		case 2:
		{
			if (n == 0) cout << "mang chua khoi tao" << endl;
			else
			{
				output(g, n);
			}
			break;
		}
		case 3:
		{
			if (n == 0) return 0;
			else
			{
				destroy_array(g, n);
				return 0;
			}
		}
		}
		system("pause");
		system("cls");
	} while (true);
}
